// Author: CÃ©sar Liedke
// Description: Recall Auto Lumber, Cutting Boards and Storage
// Instructions:
//  - Works best with full LRC/LMC
//  - Cuts the logs into boards before storing it away
//  - You need a Runebook with the first rune set near the storage
//  - You need 3 Runebooks with 16 runes each set to be south of a tree
//
// Check for minimun of 40 mana
if maxmana < 40
  sysmsg 'Minimun mana not enough. Stopping...' 33
  stop
endif
// Initial script setup
@removelist 'LogList'
@removelist 'KeepItems'
// Getting Storage, Runebooks and Axe
if not @findalias 'LogStorage'
  promptalias 'LogStorage'
endif
if not @findalias 'TreeBook1'
  promptalias 'TreeBook1'
endif
if not @findalias 'TreeBook2'
  promptalias 'TreeBook2'
endif
if not @findalias 'TreeBook3'
  promptalias 'TreeBook3'
endif
if not @findalias 'HomeTreeBook'
  promptalias 'HomeTreeBook'
endif
if not @findalias 'Axe'
    promptalias 'Axe'
endif
// Creating lists
if not listexists 'LogList'
  @createlist 'LogList'
endif
if not listexists 'TreeBook'
  @createlist 'TreeBook'
endif
if not listexists 'TreeList'
  @createlist 'TreeList'
endif
if not listexists 'KeepItems'
  @createlist 'KeepItems'
endif
if not listexists 'Runes'
  @createlist 'Runes'
endif
// Populating lists
if list 'TreeBook' == 0
  @pushlist 'TreeBook' 'TreeBook1'
  @pushlist 'TreeBook' 'TreeBook2'
  @pushlist 'TreeBook' 'TreeBook3'
endif
if list 'LogList' == 0
  @pushlist 'LogList' '0x1bdd' // Log
endif
if list 'KeepItems' == 0
  @pushlist 'KeepItems' '0x1bd7' // Boards
  @pushlist 'KeepItems' '0x2f5f' // Switch
  @pushlist 'KeepItems' '0x318f' // Bark Fragment
  @pushlist 'KeepItems' '0x3190' // Parasitic Fungus
  @pushlist 'KeepItems' '0x3191' // Luminescent Fungi
  @pushlist 'KeepItems' '0x3199' // Brilliant Amber
endif
if list 'Runes' == 0
  @pushlist 'Runes' 5 // Rune 1
  @pushlist 'Runes' 11 // Rune 2
  @pushlist 'Runes' 17 // Rune 3
  @pushlist 'Runes' 23 // Rune 4
  @pushlist 'Runes' 29 // Rune 5
  @pushlist 'Runes' 35 // Rune 6
  @pushlist 'Runes' 41 // Rune 7
  @pushlist 'Runes' 47 // Rune 8
  @pushlist 'Runes' 53 // Rune 9
  @pushlist 'Runes' 59 // Rune 10
  @pushlist 'Runes' 65 // Rune 11
  @pushlist 'Runes' 71 // Rune 12
  @pushlist 'Runes' 77 // Rune 13
  @pushlist 'Runes' 83 // Rune 14
  @pushlist 'Runes' 89 // Rune 15
  @pushlist 'Runes' 95 // Rune 16
endif
// Main Loop
sysmsg 'Starting to chopp wood.' 33
pause 1000
while list 'TreeBook' > 0
    sysmsg 'Using TreeBook: ' 33
    sysmsg TreeBook[0] 33
    while list 'Runes' > 0
        pause 500
        while mana < 20
            sysmsg 'Recovering mana...'
            pause 2000
        endwhile
        @clearjournal
        pause 500
        useobject TreeBook[0]
        waitforgump 0x554b87f3 5000
        replygump 0x554b87f3 Runes[0]
        sysmsg 'Rune position:' 33
        sysmsg Runes[0] 33
        pause 4000
        // Blocked rune spot loop avoidance
        if @injournal 'blocked' 'system'
            @clearjournal
            walk 'south'
            walk 'south'
            replay
        endif
        while not @injournal 'not enough wood here' 'system'
            // Check if axe is equipped
            if not @findlayer 'self' '2'
                equipitem 'Axe' '2'
                pause 1000
            endif
            // Prevent Target Loop
            @canceltarget
            // Use axe to north tree tile
            useobject 'Axe'
            pause 500
            waitfortarget 2500
            targettileoffset 0 -1 0
            pause 800
            // Snake warning
            if @injournal 'dislodged' 'system'
                sysmsg 'SNAKE!!!' 33
                sysmsg 'KILL IT!' 33
                pause 6000
                @clearjournal
            endif
            // Check for targeting axe at other stuff than wood
            if @injournal 'use an axe on that' 'system'
                useobject TreeBook[0]
                waitforgump 0x554b87f3 5000
                replygump 0x554b87f3 Runes[0]
                pause 2000
            endif
            // Check weight before continuing
            if diffweight < '80'
                @clearjournal
                autotargetobject 'HomeTreeBook'
                cast 'recall'
                pause 4000
                // Check if recall failed because of overweight
                if @injournal 'too encumbered to move' 'system'
                    while @findtype LogList[0] 'any' 'backpack' 'any' '2'
                        pause 300
                        @setalias 'Log' 'found'
                        @useobject 'Axe'
                        waitfortarget 2500
                        target! 'Log' 10000
                        pause 2000
                    endwhile
                    replay
                endif
                // Check if LogStorage is near. If not, replay
                if not @inrange 'LogStorage' '4'
                    replay
                endif
                // Check for equiped axe
                if not @findlayer 'self' '2'
                    equipitem 'Axe' '2'
                    pause 1000
                endif
                // Cut logs before storing
                while @findtype LogList[0] 'any' 'backpack' 'any' '2'
                    pause 300
                    @setalias 'Log' 'found'
                    @useobject 'Axe'
                    waitfortarget 2500
                    target! 'Log' 10000
                    pause 2000
                endwhile
                // Store the boards and other lumber stuff
                for 0 to 'KeepItems'
                    while @findtype 'KeepItems[]' 'any' 'backpack' 'any' '2'
                        pause 300
                        @moveitem 'found' 'LogStorage'
                        pause 1000
                    endwhile
                endfor
                // Recall to previous spot
                @useobject TreeBook[0]
                waitforgump 0x554b87f3 5000
                replygump 0x554b87f3 Runes[0]
                pause 2000
            endif
        endwhile
        if list 'Runes' ==  1
            poplist 'Runes' 'front'
            break
        else
            poplist 'Runes' 'front'
        endif
    endwhile
    pause 4000
    poplist 'TreeBook' 'front'
    replay
endwhile
@cast 'recall'
@autotargetobject 'HomeTreeBook'
@removelist 'TreeBook'
@removelist 'Runes'
